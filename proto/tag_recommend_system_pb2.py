# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: tag_recommend_system.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1atag_recommend_system.proto\x12\x14tag_recommend_system\"\xb0\x01\n\tfilm_info\x12\x0f\n\x07\x66ilm_id\x18\x01 \x01(\t\x12\x0e\n\x06web_id\x18\x02 \x01(\t\x12\x11\n\tweb_score\x18\x03 \x01(\x01\x12\x16\n\x0eweb_full_score\x18\x04 \x01(\x01\x12\r\n\x05\x64\x61tes\x18\x05 \x01(\x05\x12\x0c\n\x04tags\x18\x06 \x03(\t\x12\r\n\x05\x61reas\x18\x08 \x01(\t\x12\x1c\n\x14\x64irectors_and_actors\x18\t \x01(\t\x12\r\n\x05quote\x18\n \x01(\t\"@\n\ttag_films\x12\x33\n\nfilm_infos\x18\x01 \x03(\x0b\x32\x1f.tag_recommend_system.film_infob\x06proto3')



_FILM_INFO = DESCRIPTOR.message_types_by_name['film_info']
_TAG_FILMS = DESCRIPTOR.message_types_by_name['tag_films']
film_info = _reflection.GeneratedProtocolMessageType('film_info', (_message.Message,), {
  'DESCRIPTOR' : _FILM_INFO,
  '__module__' : 'tag_recommend_system_pb2'
  # @@protoc_insertion_point(class_scope:tag_recommend_system.film_info)
  })
_sym_db.RegisterMessage(film_info)

tag_films = _reflection.GeneratedProtocolMessageType('tag_films', (_message.Message,), {
  'DESCRIPTOR' : _TAG_FILMS,
  '__module__' : 'tag_recommend_system_pb2'
  # @@protoc_insertion_point(class_scope:tag_recommend_system.tag_films)
  })
_sym_db.RegisterMessage(tag_films)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _FILM_INFO._serialized_start=53
  _FILM_INFO._serialized_end=229
  _TAG_FILMS._serialized_start=231
  _TAG_FILMS._serialized_end=295
# @@protoc_insertion_point(module_scope)
